version: '3.8'

services:
  # MySQL 数据库
  mysql:
    image: mysql:8.0
    container_name: mail-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root123456
      MYSQL_DATABASE: mail_system
      MYSQL_USER: mailuser
      MYSQL_PASSWORD: mail123456
      TZ: Asia/Shanghai
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/src/main/resources/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - mail-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: mail-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mail-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 后端 Spring Boot 应用
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: mail-backend
    restart: always
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/mail_system?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: mailuser
      SPRING_DATASOURCE_PASSWORD: mail123456
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      JWT_SECRET: ThisIsAVerySecureSecretKeyForJWTTokenGenerationPleaseChangeInProduction2024
    ports:
      - "8080:8080"
      - "25:25"     # SMTP
      - "465:465"   # SMTP SSL
      - "143:143"   # IMAP
      - "993:993"   # IMAP SSL
      - "110:110"   # POP3
      - "995:995"   # POP3 SSL
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - mail_data:/var/mail/storage
      - ./logs:/app/logs
    networks:
      - mail-network

  # 前端 Vue 应用
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mail-frontend
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - mail-network

  # Nginx 反向代理（可选，如果前端已包含nginx则不需要）
  # nginx:
  #   image: nginx:alpine
  #   container_name: mail-nginx
  #   restart: always
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #     - ./nginx/ssl:/etc/nginx/ssl
  #     - ./frontend/dist:/usr/share/nginx/html
  #   depends_on:
  #     - backend
  #   networks:
  #     - mail-network

networks:
  mail-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  mail_data:
    driver: local